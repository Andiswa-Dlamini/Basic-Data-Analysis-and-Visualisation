import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

"""
This script demonstrates data analysis and visualization using:
1. NumPy  → Temperature data manipulation
2. Pandas → Course enrollment and revenue analysis
3. Matplotlib → Correlation between study hours and exam scores
"""


# 2D array: temperatures of 5 cities over 3 days
# Each row = city, each column = day
temps = np.array([[22, 24, 19], # city 1
                  [23, 25, 21],  # city 2
                  [25, 26, 23], # city 3
                  [21, 22, 20], # city 4
                  [24, 27, 22]]) # city 5

print("Temperatures for the 3rd day: " + str(temps.T[2])) # Temperature reading for 3rd day
# Computing average temperature for each city
print("Average for each city : \nCity 1: "+ str(temps[0].mean()) +
      "\nCity 2: " + str(temps[1].mean()) + "\nCity 3: " + str(temps[2].mean()) +
      "\nCity 4: " + str(temps[3].mean()) + "\nCity 5: " + str(temps[4].mean()))
print(temps[1] - 2) # Subtracting 2 degrees(2nd city)



# Creating a DataFrame with course data
data = {'Course': ['Python', 'Java', 'Python', 'Web Dev', 'Java'],
        'Enrolled': [100, 120, 130, 80, 90],
        'Price': [400, 450, 400, 500, 450]}
df = pd.DataFrame(data) # Creating a dataframe
print(df)
# Group data by Course&calculate total enrolled students
print(df.groupby('Course', observed=True)['Enrolled'].sum()) 
# New column revenue multiplies enrolled & price
print(df.assign(Revenue = df['Enrolled'] * df['Price'])) 
# Extracting Price column and filtering courses cheaper than 430
print("Filtered data : " + str(df['Price']))
print(df.loc[df['Price'] < 430])





study_hours = [1, 2, 3.5, 4, 5.5, 6, 7, 7.5, 8.5, 9]
exam_scores = [50, 55, 60, 65, 68, 72, 78, 82, 88, 90]

# Plotting study hours against exam scores
plt.plot(study_hours, exam_scores, label='results', c='blue', ls="dotted")
# sns.boxplot(data=exam_scores)

# Adding descriptive labels and title
plt.title("Study Hours vs Exam Scores")
plt.xlabel("Hours Studied")
plt.ylabel("Exam Scores")
plt.legend(loc=2)

plt.tight_layout()
plt.show()
